C51 COMPILER V9.60.7.0   UART                                                              07/25/2025 20:19:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\Uart.obj
COMPILER INVOKED BY: C:\keil_C51\C51\BIN\C51.EXE Uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Uar
                    -t.lst) TABS(2) OBJECT(.\Objects\Uart.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          
   4          /*
   5          函数名：Uart_Init
   6          功能：串口初始化
   7          输入：无
   8          输出：无
   9          注意：4800bps@11.0592MHz
  10          */
  11          void Uart_Init(void)  
  12          {
  13   1        PCON &= 0x7F;   //波特率不倍速
  14   1        SCON = 0x50;    //8位数据,可变波特率
  15   1        TMOD &= 0x0F;   //设置定时器模式
  16   1        TMOD |= 0x20;   //设置定时器模式
  17   1        TL1 = 0xFA;     //设置定时初始值
  18   1        TH1 = 0xFA;     //设置定时重载值
  19   1        ET1 = 0;      //禁止定时器中断
  20   1        TR1 = 1;      //定时器1开始计时
  21   1        //以下用以启动串口中断
  22   1        EA = 1;
  23   1        ES = 1;
  24   1      }
  25          
  26          
  27          /*
  28          函数名：Uart_SendByte
  29          功能：向串口数据缓存寄存器写入一个字节的数据
  30          输入：Byte 要输入的那一个字节的数据
  31          输出：无
  32          */
  33          void Uart_SendByte(unsigned char Byte){
  34   1        
  35   1        //将字节写入串口数据缓存寄存器
  36   1        SBUF = Byte;
  37   1        //检查是否写入,发送请求中断标志位置1时继续下一步
  38   1        while(TI == 0);
  39   1        //复位TI
  40   1        TI = 0;
  41   1        
  42   1      }
  43          
  44          /*
  45          
  46          //串口中断函数
  47          void Uart_Routine() interrupt 4
  48          {
  49            //判断是不是接收中断
  50            if(RI == 1){
  51              
  52              //P2 = ~SBUF;
  53              
  54              //接收中断请求标志位RI置零复位
C51 COMPILER V9.60.7.0   UART                                                              07/25/2025 20:19:54 PAGE 2   

  55              RI = 0;
  56              
  57            }
  58            
  59          }
  60          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     35    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
